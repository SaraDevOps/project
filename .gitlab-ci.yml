stages:
  - init
  - plan
  - apply
  - destroy

image:
  name: hashicorp/terraform:light
  entrypoint:
    - '/usr/bin/env'
    - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'

variables:
  TF_LOG: "WARN"  # Optional: Set Terraform log level for debugging
  AWS_ACCESS_KEY_ID: "$AWS_ACCESS_KEY_ID"
  AWS_SECRET_ACCESS_KEY: "$AWS_SECRET_ACCESS_KEY"
  AWS_DEFAULT_REGION: "us-east-2"
  

before_script:
  - export AWS_ACCESS_KEY_ID=$(echo "${AWS_ACCESS_KEY_ID}" | tr -d '\r')
  - export AWS_SECRET_ACCESS_KEY=$(echo "${AWS_SECRET_ACCESS_KEY}" | tr -d '\r')
  - export AWS_DEFAULT_REGION=$(echo "${AWS_DEFAULT_REGION}" | tr -d '\r')
  - echo "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}"
  - echo "AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}"
  - echo "AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}"
  - rm -rf .terraform
  - terraform --version
  # Install AWS CLI in the hashicorp/terraform:light image
  - apk update && apk add --no-cache curl python3 py3-pip
  - pip install awscli
  # Configure AWS CLI with the environment variables
  - mkdir -p ~/.aws
  - echo "[default]" > ~/.aws/credentials
  - echo "aws_access_key_id = ${AWS_ACCESS_KEY_ID}" >> ~/.aws/credentials
  - echo "aws_secret_access_key = ${AWS_SECRET_ACCESS_KEY}" >> ~/.aws/credentials
  - echo "[default]" > ~/.aws/config
  - echo "region = ${AWS_DEFAULT_REGION}" >> ~/.aws/config
  - aws sts get-caller-identity  # Verify AWS credentials
  - terraform init -reconfigure

init:
  stage: init
  script:
    - terraform init
    - terraform init -reconfigure

plan:
  stage: plan
  script:
    - terraform plan
  artifacts:
    paths:
      - tfplan

apply:
  stage: apply
  script:
    - terraform apply --auto-approve
  when: manual
  dependencies:
    - plan

destroy:
  stage: destroy
  script:
    - terraform init
    - terraform destroy --auto-approve
  when: manual
  dependencies:
    - apply